{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "sql": {
      "type": "container.v0",
      "connectionString": "Host={sql.bindings.tcp.host};Port={sql.bindings.tcp.port};Username=postgres;Password={sql-password.value}",
      "image": "docker.io/library/postgres:latest",
      "volumes": [
        {
          "name": "challengecounter.apphost-453ce89696-sql-data",
          "target": "/var/lib/postgresql/data",
          "readOnly": false
        }
      ],
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{sql-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "challengecounter": {
      "type": "value.v0",
      "connectionString": "{sql.connectionString};Database=challengecounter"
    },
    "api": {
      "type": "project.v0",
      "path": "../ChallengeCounter.Api/ChallengeCounter.Api.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{api.bindings.http.targetPort}",
        "ConnectionStrings__challengecounter": "{challengecounter.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "web": {
      "type": "container.v1",
      "build": {
        "context": "../ChallengeCounter.Client",
        "dockerfile": "../ChallengeCounter.Client/Dockerfile"
      },
      "env": {
        "NODE_ENV": "production",
        "PORT": "{web.bindings.http.targetPort}",
        "services__api__http__0": "{api.bindings.http.url}",
        "services__api__https__0": "{api.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 8000,
          "external": true
        }
      }
    },
    "sql-password": {
      "type": "parameter.v0",
      "value": "{sql-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}